tosca_definitions_version: tosca_simple_yaml_1_0

imports:

  - dodas_type: https://raw.githubusercontent.com/DODAS-TS/dodas-apps/oidc-test/tosca-types/dodas_types.yml

description: TOSCA template for a complete CMS computing cluster on top of K8s orchestrator

topology_template:

  inputs:
    admin_token:
      type: string
      default: "DUMMY"
    
    oidc_user:
      type: string
      default: "dciangot"
    
    oidc_group:
      type: string
      default: CMS

    number_of_masters:
      type: integer
      default: 1

    num_cpus_master:
      type: integer
      default: 4

    mem_size_master:
      type: string
      default: "8 GB"

    number_of_slaves:
      type: integer
      default: 3

    num_cpus_slave:
      type: integer
      default: 4

    mem_size_slave:
      type: string
      default: "8 GB"

    server_image:
      type: string
      #default: "ost://cloud-api-pub.cr.cnaf.infn.it/94a76d1e-cacb-48ce-ad69-c0b26fd9bb53"
      default: "ost://cloud.recas.ba.infn.it/1113d7e8-fc5d-43b9-8d26-61906d89d479"

  node_templates:

    k8s_master:
      type: tosca.nodes.DODAS.FrontEnd.Kubernetes
      properties:
        kube_version: 1.19.6
        admin_token: { get_input: admin_token }
        oidc_user: { get_input: oidc_user }
        oidc_group:  { get_input: oidc_group }
      requirements:
        - host: k8s-master-server

    k8s_slave:
      type: tosca.nodes.DODAS.WorkerNode.Kubernetes
      properties:
        kube_version: 1.19.6
        front_end_ip: { get_attribute: [ k8s-master-server, private_address, 0 ] }
      requirements:
        - host: k8s-slave-server

    k8s-master-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              http:
                protocol: tcp
                source: 80
              https:
                protocol: tcp
                source: 443
              htcmaster:
                protocol: tcp
                source: 30618
              htcschedd:
                protocol: tcp
                source: 31618
        scalable:
          properties:
            count: { get_input: number_of_masters }
        host:
          properties:
            num_cpus: { get_input: num_cpus_master }
            mem_size: { get_input: mem_size_master }
        os:
          properties:
            image: { get_input: server_image }

    k8s-slave-server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PRIVATE
        scalable:
          properties:
            count: { get_input: number_of_slaves }
            #removal_list: ['2','3']
        host:
          properties:
            #instance_type:  m1.large
            num_cpus: { get_input: num_cpus_slave }
            mem_size: { get_input: mem_size_slave }
        os:
          properties:
            image: { get_input: server_image }

  outputs:
    k8s_endpoint:
      value: { concat: [ 'https://apiserver.', get_attribute: [ k8s-master-server, public_address, 0 ], '.myip.cloud.infn.it' ] }
    kubeapps_endpoint:
      value: { concat: [ 'https://kubeapps.', get_attribute: [ k8s-master-server, public_address, 0 ], '.myip.cloud.infn.it' ] }
    grafana_endpoint:
      value: { concat: [ 'https://grafana.', get_attribute: [ k8s-master-server, public_address, 0 ], '.myip.cloud.infn.it' ] }
