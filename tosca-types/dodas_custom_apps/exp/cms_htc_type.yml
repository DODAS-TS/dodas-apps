tosca_definitions_version: tosca_simple_yaml_1_2

imports:
  - https://raw.githubusercontent.com/dodas-ts/dodas-templates/master/tosca-types/dodas_custom_apps/htc_type.yml

node_types:
  tosca.nodes.DODAS.HelmInstall.HTCondorCMS:
    derived_from: tosca.nodes.DODAS.HelmInstall.HTCondor
    properties:
      cms_config_cms_local_site:
        type: string
        required: yes
      cms_config_stageoutsite:
        type: string
        required: yes
      cms_config_stageoutprotocol:
        type: string
        required: yes
      cms_config_stageoutcommand:
        type: string
        required: yes
      cms_config_phedexnode:
        type: string
        required: yes
      cms_config_fallback_phedexnode:
        type: string
        required: no
        default: "T2_IT_myt2"
      cms_config_fallback_lfn_prefix:
        type: string
        required: no
        default: "srm://t2-srm-02.lnl.infn.it:8443/srm/managerv2?SFN=xxxxxxx"
      cms_config_fallback_command:
        type: string
        required: no
        default: "gfal2"
      cms_xrd_readserver:
        type: string
        required: no
        default: "xrootd.ba.infn.it"
      cms_input_path:
        type: string
        required: no
        default: "my/oneclient/path"
      cms_input_protocol:
        type: string
        required: no
        default: "xrootd"
      cms_config_mysquid_host:
        type: string
        required: yes
      cms_config_mysquid_port:
        type: string
        required: no
        default: 31128
      cms_value_file:
        type: string
        default: |
          condorHost: {{ condor_host }}
          ccbHost: {{ ccb_address }}
          proxyCacheHost: {{ k8s_master_ip }}
          ttsCache:
            image: dodasts/tts-cache
            tag: v0.1.3-k8s-6
            iamToken: {{ iam_token }}
            iamClientId: 99f7152a-0550-4be6-8c55-8f27dcbe67e0
            iamClientSecret: AIEx7S3vAiIKhinEPndgnEw61GHxMC0k-_4wiVXpLOhLokr97-wNK5PEgMZOpqfO6UkKVARyBb2lQ8i4Qdv_38o
          htcSchedd:
            enabled: false
          htcMaster:
            enabled: false
          squid:
            enabled: true
          cvmfs:
            enabled: true 
            image: dodasts/cvmfs
            tag: test
            pullPolicy: IfNotPresent
            replicas: 1

            # # List of repos to be mounted
            repoList: cms.cern.ch oasis.cern.ch  singularity.opensciencegrid.org

            defaultLocalConfig:
              - file: cms.cern.ch.conf
                content: |
                  export CMS_LOCAL_SITE=/etc/cvmfs/SITECONF
                  CVMFS_HTTP_PROXY=http://{{ cms_config_mysquid_host }}:{{ cms_config_mysquid_port }}
              - file: oasis.cern.ch.conf
                content: \"CVMFS_HTTP_PROXY=http://{{ cms_config_mysquid_host }}:{{ cms_config_mysquid_port }}\"
              - file: singularity.opensciencegrid.org.conf
                content: \"CVMFS_HTTP_PROXY=http://{{ cms_config_mysquid_host }}:{{ cms_config_mysquid_port }}\"

          htcWn:
            image: {{ htcondor_docker_image }}
            tag: v0.1.0-k8s-10
            siteConfCMS:
              enabled: true
              files:
                - name: sitelocal
                  path: JobConfig
                  filename: site-local-config.xml
                  content: |
                    <site-local-config>
                    <site name={{cms_config_cms_local_site}}>
                    <event-data>
                    <catalog url=\"trivialcatalog_file:/cvmfs/cms.cern.ch/SITECONF/local/PhEDEx/storage.xml?protocol={{cms_input_protocol}}\"/>
                    </event-data>
                    <calib-data>
                    <frontier-connect>
                    <load balance=\"proxies\"/>
                    <proxy url=\"http://{{cms_config_mysquid_host}}:{{cms_config_mysquid_port}}\"/>
                    <backupproxy url=\"http://cmsbpfrontier.cern.ch:3128\"/>
                    <backupproxy url=\"http://cmsbproxy.fnal.gov:3128\"/>
                    <server url=\"http://cmsfrontier.cern.ch:8000/FrontierInt\"/>
                    <server url=\"http://cmsfrontier1.cern.ch:8000/FrontierInt\"/>
                    <server url=\"http://cmsfrontier2.cern.ch:8000/FrontierInt\"/>
                    <server url=\"http://cmsfrontier3.cern.ch:8000/FrontierInt\"/>
                    </frontier-connect>
                    </calib-data>
                    <local-stage-out>
                      <command value=\"{{cms_config_stageoutcommand}}\"/>
                      <catalog url=\"trivialcatalog_file:/cvmfs/cms.cern.ch/SITECONF/{{cms_config_stageoutsite}}/PhEDEx/storage.xml?protocol={{cms_config_stageoutprotocol}}\"/>
                      <se-name value=\"srm-eoscms.cern.ch\"/>
                      <phedex-node value=\"{{cms_config_phedexnode}}\"/>
                    </local-stage-out>
                    <fallback-stage-out>
                      <se-name value=\"t2-srm-02.lnl.infn.it\"/>
                      <phedex-node value=\"{{cms_config_fallback_phedexnode}}\"/>
                      <lfn-prefix value=\"{{cms_config_fallback_lfn_prefix}}\"/>
                      <command value=\"{{cms_config_fallback_command}}\"/>
                    </fallback-stage-out>
                    </site>
                    </site-local-config>

                - name: storage
                  path: PhEDEx
                  filename: storage.xml
                  content: |
                    <storage-mapping>
                    <!-- AAA xrootd read rule -->
                    <lfn-to-pfn protocol=\"xrootd\"
                            destination-match=\".*\"
                            path-match=\"/+store/(.*)\"
                            result=\"root://{{cms_xrd_readserver}}//store/$1\"/>
                    <!-- Onedata read rule -->
                    <lfn-to-pfn protocol=\"onedata\"
                            destination-match=\".*\"
                            path-match=\"/(.*)\"
                            result=\"/mnt/onedata/{{cms_input_path}}/$1\"/>
                    </storage-mapping>
    interfaces:
      Standard:
        start:
          implementation: https://raw.githubusercontent.com/dodas-ts/dodas-templates/master/tosca-types/dodas_artifacts/ansible.yaml
          inputs:
            role_name: { get_property: [SELF, role_name] }
            name: { get_property: [SELF, name] }
            chart: { get_property: [SELF, chart] }
            values_file: { get_property: [SELF, cms_value_file] }
            values_url: { get_property: [SELF, values_url] }
            inline_options: { get_property: [SELF, inline_options] }
            kubeconfig_path: { get_property: [SELF, kubeconfig_path] }
            repos: { get_property: [SELF, repos] }
            condor_host: { get_property: [SELF, condor_host] }
            ccb_address: { get_property: [SELF, ccb_address] }
            schedd_netinterface: { get_property: [SELF, schedd_netinterface] }
            iam_token: { get_property: [SELF, iam_token] }
            htcondor_docker_image:
              { get_property: [SELF, htcondor_docker_image] }
            k8s_master_ip: { get_property: [SELF, k8s_master_ip] }
            nfs_master_ip: { get_property: [SELF, nfs_master_ip] }
            nfs_path: { get_property: [SELF, nfs_path] }
            cms_config_cms_local_site:
              { get_property: [SELF, cms_config_cms_local_site] }
            cms_input_protocol: { get_property: [SELF, cms_input_protocol] }
            cms_config_mysquid_host:
              { get_property: [SELF, cms_config_mysquid_host] }
            cms_config_mysquid_port:
              { get_property: [SELF, cms_config_mysquid_port] }
            cms_config_stageoutsite:
              { get_property: [SELF, cms_config_stageoutsite] }
            cms_config_stageoutprotocol:
              { get_property: [SELF, cms_config_stageoutprotocol] }
            cms_config_stageoutcommand:
              { get_property: [SELF, cms_config_stageoutcommand] }
            cms_config_phedexnode:
              { get_property: [SELF, cms_config_phedexnode] }
            cms_config_fallback_phedexnode:
              { get_property: [SELF, cms_config_fallback_phedexnode] }
            cms_config_fallback_lfn_prefix:
              { get_property: [SELF, cms_config_fallback_lfn_prefix] }
            cms_config_fallback_command:
              { get_property: [SELF, cms_config_fallback_command] }
            cms_xrd_readserver: { get_property: [SELF, cms_xrd_readserver] }
            cms_input_path: { get_property: [SELF, cms_input_path] }
      Status:
        get:
          implementation: https://raw.githubusercontent.com/dodas-ts/dodas-templates/master/tosca-types/dodas_artifacts/stop.sh